<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9300.17.0110.1430                                -->
<workbook source-build='9.3.12 (9300.17.0110.1430)' source-platform='win' version='9.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Quarterly Report... (OPI-Incoming-Pending-Completed-Public-Inquiries - starter)' inline='true' name='excel-direct.0itgcxw0wq922o16ddpkz0udcmsd' version='9.3'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:\Users\BASIK\Desktop\Lab_exercise_6_Using_Measure_Values_Names\Dual Axis Chart_Solution.twb Files\Data/Lab Exercise/OPI-Incoming-Pending-Completed-Public-Inquiries - starter.xlsx' interpretationMode='0' password='' server='' validate='no'>
        <relation name='Quarterly Report...' table='[&apos;Quarterly Report###$&apos;]' type='table'>
          <columns gridOrigin='A1:F9:no:A1:F9:0' header='yes' outcome='6'>
            <column datatype='string' name='Fiscal year' ordinal='0' />
            <column datatype='string' name='Quarter' ordinal='1' />
            <column datatype='integer' name='Open Pending' ordinal='2' />
            <column datatype='integer' name='Incoming' ordinal='3' />
            <column datatype='integer' name='Completions' ordinal='4' />
            <column datatype='integer' name='Closing Pending' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Fiscal year</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Fiscal year]</local-name>
            <parent-name>[Quarterly Report...]</parent-name>
            <remote-alias>Fiscal year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LRU_RRU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quarter</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Quarter]</local-name>
            <parent-name>[Quarterly Report...]</parent-name>
            <remote-alias>Quarter</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LRU_RRU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Open Pending</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Open Pending]</local-name>
            <parent-name>[Quarterly Report...]</parent-name>
            <remote-alias>Open Pending</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Incoming</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Incoming]</local-name>
            <parent-name>[Quarterly Report...]</parent-name>
            <remote-alias>Incoming</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Completions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Completions]</local-name>
            <parent-name>[Quarterly Report...]</parent-name>
            <remote-alias>Completions</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Closing Pending</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Closing Pending]</local-name>
            <parent-name>[Quarterly Report...]</parent-name>
            <remote-alias>Closing Pending</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Quarterly Report...]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F9:no:A1:F9:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.429363' measure-ordering='alphabetic' measure-percentage='0.570637' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Russia&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='Sheet1 (Extra-Help-with-Medicare-Prescription-Drug-Plan-Cost_Starter)' inline='true' name='excel-direct.0rn1wxw0i0t3vt16fi7t31hqqo30' version='9.3'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:\Users\BASIK\Desktop\Lab_exercise_6_Using_Measure_Values_Names\Dual Axis Chart_Solution.twb Files\Data/Lab Exercise/Extra-Help-with-Medicare-Prescription-Drug-Plan-Cost_Starter.xlsx' interpretationMode='0' password='' server='' validate='no'>
        <relation name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D53:no:A1:D53:0' header='yes' outcome='2'>
            <column datatype='string' name='State' ordinal='0' />
            <column datatype='integer' name='Decisions Made' ordinal='1' />
            <column datatype='integer' name='Eligible' ordinal='2' />
            <column datatype='real' name='Percentage Eligible' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LRU_RRU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Decisions Made</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Decisions Made]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Decisions Made</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Eligible</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Eligible]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Eligible</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Percentage Eligible</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Percentage Eligible]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Percentage Eligible</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D53:no:A1:D53:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Decisions Made]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Eligible]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[Decisions Made]' derivation='Sum' name='[sum:Decisions Made:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Eligible]' derivation='Sum' name='[sum:Eligible:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.413442' measure-ordering='alphabetic' measure-percentage='0.586558' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#c7c7c7'>
              <bucket>&quot;[excel-direct.0rn1wxw0i0t3vt16fi7t31hqqo30].[sum:Decisions Made:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[excel-direct.0rn1wxw0i0t3vt16fi7t31hqqo30].[sum:Eligible:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Russia&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Quarterly Report... (OPI-Incoming-Pending-Completed-Public-Inquiries - starter)' name='excel-direct.0itgcxw0wq922o16ddpkz0udcmsd' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.0itgcxw0wq922o16ddpkz0udcmsd'>
            <column datatype='integer' name='[Closing Pending]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Completions]' role='measure' type='quantitative' />
            <column datatype='string' name='[Fiscal year]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Incoming]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Open Pending]' role='measure' type='quantitative' />
            <column datatype='string' name='[Quarter]' role='dimension' type='nominal' />
            <column-instance column='[Fiscal year]' derivation='None' name='[none:Fiscal year:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quarter]' derivation='None' name='[none:Quarter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Closing Pending]' derivation='Sum' name='[sum:Closing Pending:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Completions]' derivation='Sum' name='[sum:Completions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Incoming]' derivation='Sum' name='[sum:Incoming:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Open Pending]' derivation='Sum' name='[sum:Open Pending:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.0itgcxw0wq922o16ddpkz0udcmsd].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.0itgcxw0wq922o16ddpkz0udcmsd].[sum:Closing Pending:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.0itgcxw0wq922o16ddpkz0udcmsd].[sum:Completions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.0itgcxw0wq922o16ddpkz0udcmsd].[sum:Incoming:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.0itgcxw0wq922o16ddpkz0udcmsd].[sum:Open Pending:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[excel-direct.0itgcxw0wq922o16ddpkz0udcmsd].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[excel-direct.0itgcxw0wq922o16ddpkz0udcmsd].[Multiple Values]' scope='rows' value='Number of inquiries' />
            <format attr='subtitle' class='0' field='[excel-direct.0itgcxw0wq922o16ddpkz0udcmsd].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[excel-direct.0itgcxw0wq922o16ddpkz0udcmsd].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.0itgcxw0wq922o16ddpkz0udcmsd].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([excel-direct.0itgcxw0wq922o16ddpkz0udcmsd].[none:Fiscal year:nk] * [excel-direct.0itgcxw0wq922o16ddpkz0udcmsd].[Multiple Values])</rows>
        <cols>([excel-direct.0itgcxw0wq922o16ddpkz0udcmsd].[none:Quarter:nk] / [excel-direct.0itgcxw0wq922o16ddpkz0udcmsd].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Extra-Help-with-Medicare-Prescription-Drug-Plan-Cost_Starter)' name='excel-direct.0rn1wxw0i0t3vt16fi7t31hqqo30' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.0rn1wxw0i0t3vt16fi7t31hqqo30'>
            <column datatype='integer' name='[Decisions Made]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Eligible]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Decisions Made]' derivation='Sum' name='[sum:Decisions Made:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Eligible]' derivation='Sum' name='[sum:Eligible:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[excel-direct.0rn1wxw0i0t3vt16fi7t31hqqo30].[sum:Eligible:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[excel-direct.0rn1wxw0i0t3vt16fi7t31hqqo30].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[excel-direct.0rn1wxw0i0t3vt16fi7t31hqqo30].[sum:Decisions Made:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[excel-direct.0rn1wxw0i0t3vt16fi7t31hqqo30].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[excel-direct.0rn1wxw0i0t3vt16fi7t31hqqo30].[sum:Eligible:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[excel-direct.0rn1wxw0i0t3vt16fi7t31hqqo30].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([excel-direct.0rn1wxw0i0t3vt16fi7t31hqqo30].[sum:Decisions Made:qk] + [excel-direct.0rn1wxw0i0t3vt16fi7t31hqqo30].[sum:Eligible:qk])</rows>
        <cols>[excel-direct.0rn1wxw0i0t3vt16fi7t31hqqo30].[none:State:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='48'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[excel-direct.0itgcxw0wq922o16ddpkz0udcmsd].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.0itgcxw0wq922o16ddpkz0udcmsd].[:Measure Names]</field>
            <field>[excel-direct.0itgcxw0wq922o16ddpkz0udcmsd].[none:Fiscal year:nk]</field>
            <field>[excel-direct.0itgcxw0wq922o16ddpkz0udcmsd].[none:Quarter:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[excel-direct.0rn1wxw0i0t3vt16fi7t31hqqo30].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.0rn1wxw0i0t3vt16fi7t31hqqo30].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nO29d3Rc2X3n+XmvckQVco4EQRLMuZk656BkSdbKGkljr1fjtdYa70gz9ozP
      SjP2WuNjy5a9ljySrGDLUkstdVJT3epmB7KZQIIkQBCJyDmnKlR+Yf+oBpqFVyQBIjWB9zmH
      5xD16t361av7veF3f/d3BVVVVXR01iniahugo7Oa6ALQWdfoAtBZ1+gC0FkXqIpCLBZDUVQU
      RWFm4mtcVat0dFaIS2feIoARpzud3s4+jh7ezvBERO8BdNYHBUUFKJICApgtVq7X11J96td6
      D6CzHlAZGx3HaLIQCPhRomEGfMO43XYEfR1AZz2gKDKSJGM0mlAUGQFQQReAzvomYQgUCATQ
      9aCznkjoASRJWrKCFUUhGAzidDqXrEwdnaUmoQcwGpduTizLMgaDYUnL1NFZanQ3qM66RheA
      zrpGF4DOukYXgM66RheAzrpGF4DOukYXgM66RheAzrpGF4DOukYXgM66RheAzrrmDgJ1ZEYG
      R1BEIy6nlelgFI/LhmqwoESCmGwOjKKw9Jbq6CwDdyAAhanRAaqudVGc7UJWFewmlYA1Hyno
      48ihAxj1fkXnLuEOqqoJh0Vk9+F7ABuVFSUE/T7qaq/gyczHYhQIhUKEw+ElN1ZHZ6m5o7Z6
      bMpPTkY6dlOQM9UNpGZkcezRZ4j2NTA0HUUURURR7wZ0Pvgs25ZIWZYJBoO4XK7lKF5HZ0nQ
      m2mddY0uAJ11jS4AnXWNLgCddY0uAJ11jS4AnXWNLgCddY0uAJ11jS4AnXWNLgCddY0uAJ11
      jZ64c4WJxWLU19drXvd6vRQVFa2CResbXQCrQLJQ8Wg0ugqW6CxcAGqMd157jYg5jTRriL7R
      aUrzvERcZfj7W9l/+CgOsz6y0rk7WHhNDQ/SNRTDKMgEYnaO7KtkYmSYd954lYzSrTjMon7I
      hs5dw8IFYPZQmJeKSYkhKQHqmztxuNw88NRH6a+rYjIs4fP58Pl8y2Cujs7SsvAhkMHF/gM7
      iQlmbAYFXzCKx21HEc0I2fehGkUs1pTZDTE6Oh9k7mgS7HB7Zv+fYb+xNLv2zatEJBJhenpa
      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
      6xpdADrrmv8faTk1BzLyZdQAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
